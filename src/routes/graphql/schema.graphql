scalar Map

type Query {
	entries(searchTerm: String): [DBEntry]
	entry(id: String!): DBEntry
}

interface DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type BaphariaData {
	name: Text
	desc: Text
	source: Text
	effect: Text
	thumb: String
	category: Text
	filterGroup: String
}

type Text {
	ja_JP: String!
	en_US: String!
}

type Item implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type Enemy implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type Costume implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type Gesture implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type Imagine implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type LiquidMemory implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type StampSet implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type Token implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type Weapon implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type Skill implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}

type GameMap implements DBEntry {
	id: String!
	bapharia: BaphariaData!
}