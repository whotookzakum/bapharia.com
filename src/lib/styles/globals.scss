@import './colors';
@import './typography';
@import './variables';
@import './layout';

html {
    scroll-padding-top: 5rem; // For Article anchor links
    scroll-timeline: scroll-tracker-timeline block;
    // scroll-behavior: smooth;
}

body {
    margin: 0;
    accent-color: var(--accent1);
    background-color: var(--bg);
}

* {
    box-sizing: border-box;
    cursor: url('/images/cursor.png'), default;
}

hr {
    border: none;
    margin: 0.5rem 0;
    height: 1px;
    background-color: var(--surface3);
}


.box {
    background: var(--surface1);
    border-radius: 1rem; // orig. 5px
    border: none;
    // box-shadow: 0 2px 4px var(--surface-shadow);
    // border: 1px solid transparent;
    // border: 1px solid var(--surface2);
    padding: 1rem;
    overflow: hidden;

    &.hover:hover,
    &.hover:focus-visible {
        background: var(--surface2);
        // border-color: var(--surface3);
    }
}

.component-label {
    text-transform: uppercase;
    color: var(--text2);
    font-size: var(--step--1);
    font-family: inherit;
    font-weight: normal;
    display: inline-block;
    margin-bottom: 0.5rem;
}

.visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

label:has(input.visually-hidden:focus-visible) {
    outline: 2px solid var(--accent1);
}

input.visually-hidden[type="checkbox"]:focus-visible+label,
input.visually-hidden[type="radio"]:focus-visible+label {
    outline: 2px solid var(--accent1);
}

.flex {
    display: flex;
}

.grid {
    display: grid;
}

.amount svg,
.bonus svg {
    vertical-align: sub;
}

.g-50 {
    gap: 0.5rem;
}

.g-25 {
    gap: 0.25rem;
}

.g-100 {
    gap: 1rem;
}

.skip-std {
    font-family: "Skip Std", inherit;
}

.entry-details table {
    width: 100%;
    border-collapse: collapse;
    line-height: 1.8;
    overflow: hidden;

    thead tr {
        background: var(--surface2);
    }

    tr+tr {
        border-top: 1px solid var(--surface2);
    }

    td,
    th {
        padding: 1rem;
    }
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type="number"] {
    appearance: textfield;
    -moz-appearance: textfield;
}

.pill {
    padding: 0.2rem 0.5rem;
    margin-block: 0.2rem;
    width: fit-content;
    font-size: var(--step--2);
    border-radius: 1rem;
    --s: 70%;
    --l: 18%;
    background-color: hsl(var(--h), var(--s), var(--l));
    color: hsl(var(--h), calc(var(--s) - 30%), calc(var(--l) + 70%));
    border-color: hsl(var(--h), calc(var(--s) - 20%), calc(var(--l) + 10%));
    --surface-shadow: rgba(0, 0, 0, 0.212);
    white-space: nowrap;
}

.kofi {
    position: relative;

    &::before {
        content: "";
        z-index: 1;
        top: 6px;
        left: 3px;
        width: 16px;
        height: 16px;
        position: absolute;
        background: #ff5e5b;
    }
}

.kofi svg {
    position: relative;
    z-index: 2;
}

.transparent-button {
    background: none;
    border: none;
    color: var(--text2);

    &:hover,
    &:focus-visible {
        color: var(--accent1);
    }
}

.rounded {
    border-radius: 3rem;
}

.show-when-focus-visible:not(:focus-visible) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.transition-pushable {
    transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);

    &:active {
        transform: scale(0.95);
    }
}

.btn {
    display: flex;
    align-items: center;
    width: fit-content;
    text-decoration: none;
    color: var(--text1);
    font-weight: 500;
    font-size: var(--step-1);
    min-height: 44px;
    padding: 0.75rem 1rem;
    border-radius: 3rem;
}

.btn-primary {
    background: var(--accent1);
    transition: background-color 0.15s ease;

    &:hover,
    &:focus-visible {
        background: hsl(210, 68%, 45%);
    }
}

.btn-fadein {
    position: relative;
    // border: 1px solid rgba(39, 52, 78, 0.9);
    background: rgba(39, 52, 78, 0.4);
    overflow: hidden;
    transition: background-color 0.35s ease;

    &:hover,
    &:focus-visible {
        background: rgba(39, 52, 78, 0.4);
    }

    &::after {
        content: "";
        position: absolute;
        inset: 0;
        z-index: -1;
        background: linear-gradient(-138deg, rgb(58, 164, 193), #6315ac, #ab1572);
        opacity: 0;
        transform: scaleX(1);
        transform-origin: 0%;
        transition: opacity 0.35s ease, transform 0.35s ease;
    }

    &:where(:hover, :focus-visible)::after {
        opacity: 1;
        transform: scaleX(1.5);
    }
}





.centered-section {
    text-align: center;

    p {
        margin-inline: auto;
    }
}

// .splitpanes__splitter {
//     width: 1rem !important;
//     border: none !important;
//     background: none !important;
// }

// .splitpanes__pane {
//     background: none !important;
//     overflow: unset !important;
// }

iconify-icon {
    display: inline-block;
    width: 1em;
    height: 1em;
}

.align-items-center {
    align-items: center;
}

.table-wrapper {
    width: 100%;
    overflow-x: scroll;
}

.rangeSlider {
    --range-slider: var(--surface3); // slider track color; text3 or surface3

    // Focused
    --range-range: var(--accent1); // space between the handles
    --range-handle: var(--accent1); // the handle(s) not being dragged
    --range-handle-focus: var(--accent1); // the handle being dragged
    --range-handle-border: var(--accent1); // shadow on the dragged handle
    --range-float: var(--accent1); // tooltip when dragging
    --range-float-text: hsl(220, 0%, 89%); // tooltip text color

    // Unfocused
    --range-handle-inactive: var(--text3); // handle color
    --range-range-inactive: var(--text3); // space between the handles
    --range-float-inactive: var(--accent1); // tooltip when hovering but not dragging

    // Pips
    --range-pip: var(--text2); // tick marker color in unselected area
    --range-pip-text: var(--text2); // tick label color in unselected area
    --range-pip-active: var(--text2); // tick marker color for labeled & lines up with thumb
    --range-pip-active-text: var(--text2); // tick label color for labeled & lines up with thumb
    --range-pip-hover: var(--accent1); // tick marker color when hovered
    --range-pip-hover-text: var(--accent1); // tick label color when hovered
    --range-pip-in-range: var(--text2); // tick label color in selected area
    --range-pip-in-range-text: var(--text2); // tick label color in selected area

    &.range.pips {
        // margin-inline: 1.25rem !important;
        margin-bottom: 2.3em !important
    }
}

.adjusted-range .rangeSlider {
    --range-handle-inactive: var(--accent1) !important;
    --range-range-inactive: var(--accent1) !important;
    --range-pip-active: var(--accent1) !important;
    --range-pip-in-range: var(--accent1) !important;
    --range-pip-active-text: var(--accent1) !important;
    --range-pip-in-range-text: var(--accent1) !important;
}